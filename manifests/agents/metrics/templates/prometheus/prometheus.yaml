#
# See https://github.com/kubernetes/charts/tree/master/stable/prometheus/templates
#
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: {{ .Values.namespace }}
  labels:
    app: prometheus
spec:
  ports:
  - name: http
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: prometheus

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: {{ .Values.namespace }}
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      # TODO: init container to chown -R 65534:65534 volume mount path?
      containers:
        - name: prometheus-server
          image: {{ .Values.prometheus.image }}:{{ .Values.prometheus.version }}
          imagePullPolicy: "{{ .Values.prometheus.pullPolicy }}"
          args:
            - --storage.tsdb.retention={{ .Values.prometheus.retention }}
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            # TODO: disable admin api?
            - --web.enable-admin-api
            # TODO: remote_write?
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            limits:
              cpu: {{ .Values.prometheus.cpuLimitMilliCores }}m
              memory: {{ .Values.prometheus.memLimitMB }}Mi
            requests:
              cpu: {{ .Values.prometheus.cpuRequestMilliCores }}m
              memory: {{ .Values.prometheus.memRequestMB }}M
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
        # sidecar container that forces prometheus to reload on changes to its configmap
        - name: prometheus-server-configmap-reload
          image: jimmidyson/configmap-reload:v0.1
          imagePullPolicy: IfNotPresent
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9090/-/reload
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
      tolerations:
        # allow scheduling onto master
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        # TODO: persistentVolumeClaim?
        - name: storage-volume
          emptyDir: {}
